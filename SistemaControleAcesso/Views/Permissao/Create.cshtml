@model SistemaControleAcesso.Models.Permissao

@{
    ViewBag.Title = "Permissão de acesso";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

        <div class="box-header with-border">
            <h1 class="box-title">Informações</h1>
        </div>
        <div class="box-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row">
                <div class="form-group col-sm-12">
                    @Html.LabelFor(model => model.id, htmlAttributes: new { @class = "control-label" })
                    <p class="form-control-static">@Html.DisplayFor(model => model.id)</p>
                </div>
            </div>
            <div class="box">
                <div class="box-header with-border">
                    <h1 class="box-title">@Html.LabelFor(model => model.funcionalidade_id, htmlAttributes: new { @class = "control-label" })</h1>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="form-group col-sm-6">
                            @Html.LabelFor(model => model.funcionalidade_id, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                @Html.EditorFor(model => model.funcionalidade_id, new { htmlAttributes = new { @class = "form-control" } })
                                <span class="input-group-btn">
                                    <button type="button" class="btn btn-default" onclick="Lista_Funcionalidade.abrir()"><i class="glyphicon glyphicon-search"></i></button>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(model => model.funcionalidade_id, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-sm-6">
                            @Html.LabelFor(model => model.funcionalidade.nome, htmlAttributes: new { @class = "control-label" })
                            <p class="form-control-static" id="@Html.IdFor(model => model.funcionalidade.nome)">@Html.DisplayFor(model => model.funcionalidade.nome)</p>
                            <p id="@Html.IdFor(model => model.funcionalidade.tipo)" style="display:none;">@( Model != null ? (int)Model.funcionalidade.tipo : (int)SistemaControleAcesso.Models.Funcionalidade_tipo.clicavel)</p>
                        </div>
                    </div>
                    @Html.Partial("~/Views/Funcionalidade/_Selecionar.cshtml")
                </div>
            </div>

            <div class="box">
                <div class="box-header with-border">
                    <h1 class="box-title">@Html.LabelFor(model => model.perfil_id, htmlAttributes: new { @class = "control-label" })</h1>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="form-group col-sm-6">
                            @Html.LabelFor(model => model.perfil_id, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                @Html.EditorFor(model => model.perfil_id, new { htmlAttributes = new { @class = "form-control" } })
                                <span class="input-group-btn">
                                    <button type="button" class="btn btn-default" onclick="Lista_Perfil.abrir()" id="btn_@Html.IdFor(model => model.perfil_id)"><i class="glyphicon glyphicon-search"></i></button>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(model => model.perfil_id, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-sm-6">
                            @Html.LabelFor(model => model.perfil.nome, htmlAttributes: new { @class = "control-label" })
                            <p class="form-control-static" id="@Html.IdFor(model => model.perfil.nome)">@Html.DisplayFor(model => model.perfil.nome)</p>
                        </div>
                    </div>
                    @Html.Partial("~/Views/Perfil/_Selecionar.cshtml")
                </div>
            </div>

            <div class="box">
                <div class="box-header with-border">
                    <h1 class="panel-title">@Html.LabelFor(model => model.usuario_id, htmlAttributes: new { @class = "control-label" })</h1>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="form-group col-sm-6">
                            @Html.LabelFor(model => model.usuario_id, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                @Html.EditorFor(model => model.usuario_id, new { htmlAttributes = new { @class = "form-control" } })
                                <span class="input-group-btn">
                                    <button type="button" class="btn btn-default" onclick="Lista_Usuario.abrir()" id="btn_@Html.IdFor(model => model.usuario_id)"><i class="glyphicon glyphicon-search"></i></button>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(model => model.usuario_id, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-sm-6">
                            @Html.LabelFor(model => model.usuario.nome, htmlAttributes: new { @class = "control-label" })
                            <p class="form-control-static" id="@Html.IdFor(model => model.usuario.nome)">@Html.DisplayFor(model => model.usuario.nome)</p>
                        </div>
                    </div>
                    @Html.Partial("~/Views/Usuario/_Selecionar.cshtml")
                </div>
            </div>

            <div class="row" id="grp_permissoes_normais">
                <div class="form-group col-sm-3">
                    @Html.LabelFor(model => model.consultar, htmlAttributes: new { @class = "control-label" })
                    @Html.EnumDropDownListFor(model => model.consultar, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.consultar, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-sm-3">
                    @Html.LabelFor(model => model.inserir, htmlAttributes: new { @class = "control-label" })
                    @Html.EnumDropDownListFor(model => model.inserir, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.inserir, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-sm-3">
                    @Html.LabelFor(model => model.alterar, htmlAttributes: new { @class = "control-label" })
                    @Html.EnumDropDownListFor(model => model.alterar, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.alterar, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-sm-3">
                    @Html.LabelFor(model => model.excluir, htmlAttributes: new { @class = "control-label" })
                    @Html.EnumDropDownListFor(model => model.excluir, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.excluir, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row" id="grp_permissoes_especiais">
                <div class="form-group col-sm-3">
                    @Html.LabelFor(model => model.especial, htmlAttributes: new { @class = "control-label" })
                    @Html.EnumDropDownListFor(model => model.especial, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.especial, "", new { @class = "text-danger" })
                </div>
            </div>

            
        </div>
        <div class="box-footer">
            <div class="box-tools pull-right">
                <button type="submit" class="btn btn-primary"><i class="glyphicon glyphicon-ok-circle"></i> Salvar</button>
                <a href="@Url.Action(actionName: "Index")" class="btn btn-default"><i class="glyphicon glyphicon-remove-circle"></i> Fechar</a>
            </div>
        </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        var @Html.IdFor(model => model.funcionalidade_id) = "@Html.IdFor(model => model.funcionalidade_id)";
        var @Html.IdFor(model => model.funcionalidade.nome) = "@Html.IdFor(model => model.funcionalidade.nome)";
        var @Html.IdFor(model => model.funcionalidade.tipo) = "@Html.IdFor(model => model.funcionalidade.tipo)";

        var Permissao_funcionalidade_id = {
            isvalid: function () {
                $("#" + @Html.IdFor(model => model.funcionalidade.nome)).html('');

                var id = $('#' + @Html.IdFor(model => model.funcionalidade_id)).val();
                if (id != '' && id != '0'){
                    $.ajax({
                        type: 'GET',
                        async:false,
                        url: '@Url.Action(actionName: "Find", controllerName: "Funcionalidade")',
                        data: { "id": id },
                        success: function (data) {
                            $("#" + @Html.IdFor(model => model.funcionalidade.nome)).html(data.nome);
                            $("#" + @Html.IdFor(model => model.funcionalidade.tipo)).html(data.tipo);
                            Permissao_funcionalidade_id.escondePermissoes();
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                        }

                    });
                }
            },
            msgCampo: function (id_campo, mensagem) {
                var span = document.createElement('span');
                $(span).attr('for', id_campo);
                $(span).html(mensagem);
                $("span[data-valmsg-for='" + id_campo + "']").append(span);
            },
            escondePermissoes: function(){
                if ($("#" + "@Html.IdFor(model => model.funcionalidade.tipo)").html() == "@((int)SistemaControleAcesso.Models.Funcionalidade_tipo.clicavel)" ){
                    $("#grp_permissoes_normais").show();
                    $("#grp_permissoes_especiais").hide();
                }else {
                    $("#grp_permissoes_normais").hide();
                    $("#grp_permissoes_especiais").show();
                }
            }
        };
        var @Html.IdFor(model => model.perfil_id) = "@Html.IdFor(model => model.perfil_id)";
        var @Html.IdFor(model => model.perfil.nome) = "@Html.IdFor(model => model.perfil.nome)";

        var Permissao_perfil_id = {
            isvalid: function () {
                $("#" + @Html.IdFor(model => model.perfil.nome)).html('');

                var id = $('#' + @Html.IdFor(model => model.perfil_id)).val();
                if (id != '' && id != '0'){
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action(actionName: "Find", controllerName: "Perfil")',
                        data: { "id": id },
                        success: function (data) {
                            $("#" + @Html.IdFor(model => model.perfil.nome)).html(data.nome);

                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                        }

                    });
                }
            },
            msgCampo: function (id_campo, mensagem) {
                var span = document.createElement('span');
                $(span).attr('for', id_campo);
                $(span).html(mensagem);
                $("span[data-valmsg-for='" + id_campo + "']").append(span);
            }
        };

        var @Html.IdFor(model => model.usuario_id) = "@Html.IdFor(model => model.usuario_id)";
        var @Html.IdFor(model => model.usuario.nome) = "@Html.IdFor(model => model.usuario.nome)";

        var Permissao_usuario_id = {
            isvalid: function () {
                $("#" + @Html.IdFor(model => model.usuario.nome)).html('');

                var id = $('#' + @Html.IdFor(model => model.usuario_id)).val();
                if (id != '' && id != '0'){
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action(actionName: "Find", controllerName: "Usuario")',
                        data: { "id": id },
                        success: function (data) {
                            $("#" + @Html.IdFor(model => model.usuario.nome)).html(data.nome);

                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                        }

                    });
                }
            },
            msgCampo: function (id_campo, mensagem) {
                var span = document.createElement('span');
                $(span).attr('for', id_campo);
                $(span).html(mensagem);
                $("span[data-valmsg-for='" + id_campo + "']").append(span);
            }
        };
        fs.preparaListener([
            {
                on: ["ready"],
                funcao: function(){
                    Permissao_funcionalidade_id.escondePermissoes();

                }
            },
        {
            blur: ["#" + "@Html.IdFor(model => model.funcionalidade_id)"],
            funcao: function(){
                Permissao_funcionalidade_id.isvalid();
            }
        },
        {
            on : ["ready"],
            blur: ["#" + "@Html.IdFor(model => model.perfil_id)"],
            funcao: function(){
                if ($("#" + @Html.IdFor(model => model.perfil_id)).val() != "" && $("#" + @Html.IdFor(model => model.perfil_id)).val() != "0" ){
                    $("#@Html.IdFor(model => model.usuario_id)").addClass("disabled");
                    $("#@Html.IdFor(model => model.usuario_id)").attr("disabled", "disabled");
                    $("#btn_@Html.IdFor(model => model.usuario_id)").addClass("disabled");
                    $("#btn_@Html.IdFor(model => model.usuario_id)").attr("disabled", "disabled");
                }else {
                    $("#@Html.IdFor(model => model.usuario_id)").removeClass("disabled");
                    $("#@Html.IdFor(model => model.usuario_id)").removeAttr("disabled");
                    $("#btn_@Html.IdFor(model => model.usuario_id)").removeClass("disabled");
                    $("#btn_@Html.IdFor(model => model.usuario_id)").removeAttr("disabled");
                }

            }
        },
        {
            blur: ["#" + "@Html.IdFor(model => model.perfil_id)"],
            funcao: function(){
                Permissao_perfil_id.isvalid();
            }
        },
        {
            on: ["ready"],
            blur: ["#" + "@Html.IdFor(model => model.usuario_id)"],
            funcao: function(){
                if ($("#" + @Html.IdFor(model => model.usuario_id)).val() != "" && $("#" + @Html.IdFor(model => model.usuario_id)).val() != "0" ){
                    $("#@Html.IdFor(model => model.perfil_id)").addClass("disabled");
                    $("#@Html.IdFor(model => model.perfil_id)").attr("disabled", "disabled");
                    $("#btn_@Html.IdFor(model => model.perfil_id)").addClass("disabled");
                    $("#btn_@Html.IdFor(model => model.perfil_id)").attr("disabled", "disabled");
                }else {
                    $("#@Html.IdFor(model => model.perfil_id)").removeClass("disabled");
                    $("#@Html.IdFor(model => model.perfil_id)").removeAttr("disabled");
                    $("#btn_@Html.IdFor(model => model.perfil_id)").removeClass("disabled");
                    $("#btn_@Html.IdFor(model => model.perfil_id)").removeAttr("disabled");
                }
            }

        },
        {
            blur: ["#" + "@Html.IdFor(model => model.usuario_id)"],
            funcao: function(){
                Permissao_usuario_id.isvalid();
            }

        }

        ]);

    </script>
}
