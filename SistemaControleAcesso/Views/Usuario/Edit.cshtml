@model SistemaControleAcesso.Models.Usuario

@{
    ViewBag.Title = "Usuário";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="box-header with-border">
        <h3 class="box-title">Informações</h3>
    </div>
    <div class="box-body">
        <div class="row">
            <div class="form-group col-sm-3">
                @Html.HiddenFor(model => model.id)
                @Html.LabelFor(model => model.id, htmlAttributes: new { @class = "control-label" })
                <p class="form-control-static">@Html.DisplayFor(model => model.id)</p>
            </div>

            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-sm-3">
                @Html.LabelFor(model => model.cpf, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.cpf, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cpf, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-sm-2">
                @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label" })
                @Html.EnumDropDownListFor(model => model.status, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title">Endereço</h3>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="form-group col-sm-8">
                        @Html.LabelFor(model => model.endereco.logradouro, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.endereco.logradouro, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.endereco.logradouro, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-sm-4">
                        @Html.LabelFor(model => model.endereco.numero, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.endereco.numero, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.endereco.numero, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-sm-4">
                        @Html.LabelFor(model => model.endereco.complemento, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.endereco.complemento, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.endereco.complemento, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-sm-4">
                        @Html.LabelFor(model => model.endereco.bairro, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.endereco.bairro, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.endereco.bairro, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-sm-4">
                        @Html.LabelFor(model => model.endereco.cep, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.endereco.cep, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.endereco.cep, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="box">

                    <div class="box-header with-border">
                        <h3 class="box-title">Cidade</h3>
                    </div>
                    <div class="box-body">
                        <div class="row">
                            <div class="form-group form-group-sm col-sm-4">
                                @Html.LabelFor(model => model.cidade_id, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    @Html.EditorFor(model => model.cidade_id, new { htmlAttributes = new { @class = "form-control" } })
                                    <span class="input-group-btn">
                                        <button type="button" class="btn btn-default" onclick="Lista_Cidade.abrir()"><i class="glyphicon glyphicon-search"></i></button>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(model => model.cidade_id, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group form-group-sm col-sm-5">
                                @Html.LabelFor(model => model.cidade.nome, htmlAttributes: new { @class = "control-label" })
                                <p class="form-control-static" id="@Html.IdFor(model =>model.cidade.nome)">@Html.DisplayFor(model => model.cidade.nome)</p>
                            </div>
                            <div class="form-group form-group-sm col-sm-3">
                                @Html.LabelFor(model => model.cidade.estado_uf, htmlAttributes: new { @class = "control-label" })
                                <p class="form-control-static" id="@Html.IdFor(model =>model.cidade.estado_uf)">@Html.DisplayFor(model => model.cidade.estado_uf)</p>
                            </div>
                        </div>
                    </div>
                </div>

                @Html.Partial("~/Views/Cidade/_Selecionar.cshtml")
            </div>
        </div>
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title">Contato</h3>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="form-group col-sm-6">
                        @Html.LabelFor(model => model.telefone, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.telefone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.telefone, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-sm-6">
                        @Html.LabelFor(model => model.celular, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.celular, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.celular, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title">Identificação</h3>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="form-group col-sm-6">
                        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-sm-6">
                        @Html.LabelFor(model => model.senha, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.senha, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.senha, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="box-footer">
        <div class="box-tools pull-right">
            <button type="submit" class="btn btn-primary"><i class="glyphicon glyphicon-ok-circle"></i> Salvar</button>
            <a href="@Url.Action(actionName: "Index")" class="btn btn-default"><i class="glyphicon glyphicon-remove-circle"></i> Fechar</a>
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var @Html.IdFor(model => model.cidade_id) = "@Html.IdFor(model => model.cidade_id)";
        var @Html.IdFor(model => model.cidade.nome) = "@Html.IdFor(model => model.cidade.nome)";
        var @Html.IdFor(model => model.cidade.estado_uf) = "@Html.IdFor(model => model.cidade.estado_uf)";

        var Usuario_cidade_id = {
            isvalid: function () {
                $("#" + @Html.IdFor(model => model.cidade.nome)).html('');
                $("#" + @Html.IdFor(model => model.cidade.estado_uf)).html('');

                var id = $('#' + @Html.IdFor(model => model.cidade_id)).val();
                if (id != '' && id != '0') {
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action(actionName: "Find", controllerName: "Cidade")',
                        data: { "id": id },
                        success: function (data) {
                            $("#" + @Html.IdFor(model => model.cidade.nome)).html(data.nome);
                            $("#" + @Html.IdFor(model => model.cidade.estado_uf)).html(data.estado_uf);
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                        }

                    });
                }
            }
        };
        fs.preparaListener([
            {
                blur: ["#" + @Html.IdFor(model => model.cidade_id)],
                funcao: function(){
                    Usuario_cidade_id.isvalid();
                }
            }
        ]);
    </script>
}
