<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ViewDataTypeShortName#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}
<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewDataTypeShortName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<table class="table table-bordered table-striped">

	<tr>
		<th style="width:250px;"><a class="btn btn-primary @(!ViewBag.inserir? "disabled" : "")" href="@Url.Action(actionName:"Create")"><i class="glyphicon glyphicon-file"></i></a></th>
<#
IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <th>
            @Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
        </th>
<#
    }
}
#>
    </tr>

@foreach (var item in Model) {
    <tr>
<#
	string pkName = GetPrimaryKeyName();
	if (pkName != null) {
	#>
		<td>
			<a class="btn btn-primary @(!ViewBag.atualizar? "disabled" : "")" href="@Url.Action(actionName:"Edit", routeValues: new { id = item.<#= pkName #>})"><i class="glyphicon glyphicon-pencil"></i></a>
			<a class="btn btn-success @(!ViewBag.consultar? "disabled" : "")" href="@Url.Action(actionName:"Details",routeValues: new { id = item.<#= pkName #>})"><i class="glyphicon glyphicon-eye-open"></i></a>
			<a class="btn btn-danger @(!ViewBag.excluir? "disabled" : "")" href="@Url.Action(actionName:"Delete",routeValues: new { id = item.<#= pkName #>})"><i class="glyphicon glyphicon-trash"></i></a>				
		</td>
	<#
	} else {
	#>
		<td>
			<a class="btn btn-primary @(!ViewBag.atualizar? "disabled" : "")" href="@Url.Action(actionName:"Edit", routeValues: new { /* id=item.PrimaryKey */})"><i class="glyphicon glyphicon-pencil"></i></a>
			<a class="btn btn-success @(!ViewBag.consultar? "disabled" : "")" href="@Url.Action(actionName:"Details",routeValues: new { /* id=item.PrimaryKey */})"><i class="glyphicon glyphicon-eye-open"></i></a>
			<a class="btn btn-danger @(!ViewBag.excluir? "disabled" : "")" href="@Url.Action(actionName:"Delete",routeValues: new { /* id=item.PrimaryKey */})"><i class="glyphicon glyphicon-trash"></i></a>
		</td>
	<#
	}
	#>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <td>
            @Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
        </td>
<#
    }
}
#>
    </tr>
}

</table>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>